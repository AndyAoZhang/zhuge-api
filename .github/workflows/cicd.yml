# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package -Dmaven.test.skip=true

    - name: show files
      run: |
        ls -a # 查看打包后的目录文件

    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        source: "target/*.jar"
        target: "~/deploy/${{ github.repository }}/${{ github.run_number }}"

    - name: run remote shells
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER}}
        key: ${{ secrets.KEY }}
        script: |
          mkdir -p ~/apps/zhuge-api
          mkdir -p ~/logs/zhuge-api
          rm -rf ~/apps/zhuge-api/*
          cp -r ~/deploy/${{ github.repository }}/${{ github.run_number }}/target/* ~/apps/zhuge-api/
          pkill -f apps/zhuge-api/zhuge-api
          nohup java -jar ~/apps/zhuge-api/zhuge-api-0.0.1-SNAPSHOT.jar >> ~/logs/zhuge-api/nohup.out &
          rm -rf ~/deploy/${{ github.repository }}/${{ github.run_number }}